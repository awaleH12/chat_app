# Generated by Django 4.2.25 on 2025-10-29 02:49

from django.db import migrations, models


def normalize_gender(apps, schema_editor):
    # Normalize existing gender values to single-character codes expected by the new field
    # Map common variants to 'M' or 'F', set others to NULL.
    with schema_editor.connection.cursor() as cursor:
        # map Male variants to 'M'
        cursor.execute(
            """
            UPDATE core_userprofile
            SET gender = 'M'
            WHERE LOWER(gender) IN ('male', 'm') OR gender = 'M' OR gender = 'm'
            """
        )
        # map Female variants to 'F'
        cursor.execute(
            """
            UPDATE core_userprofile
            SET gender = 'F'
            WHERE LOWER(gender) IN ('female', 'f') OR gender = 'F' OR gender = 'f'
            """
        )
        # set any other (unexpected) values to NULL to avoid truncation errors
        cursor.execute(
            """
            UPDATE core_userprofile
            SET gender = NULL
            WHERE gender IS NOT NULL AND gender NOT IN ('M', 'F')
            """
        )


def noop_reverse(apps, schema_editor):
    # No reverse data migration needed (can't reliably restore original values)
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(normalize_gender, reverse_code=noop_reverse),
        migrations.AlterField(
            model_name='userprofile',
            name='gender',
            field=models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True),
        ),
    ]
